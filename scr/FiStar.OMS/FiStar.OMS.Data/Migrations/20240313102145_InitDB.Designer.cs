// <auto-generated />
using System;
using FiStar.OMS.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FiStar.OMS.Data.Migrations
{
    [DbContext(typeof(FiStarOmrDBContextMigrate))]
    [Migration("20240313102145_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FiStar.OMS.Data.Entity.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("country_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("country_code");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("country_name");

                    b.HasKey("CountryId")
                        .HasName("PK_country");

                    b.ToTable("country", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("currency_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyId"));

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("currency_code");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("currency_name");

                    b.HasKey("CurrencyId")
                        .HasName("PK_currency");

                    b.ToTable("currency", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CustomerCompany")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("customer_company");

                    b.Property<string>("CustomerCompanyID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("customer_company_id");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("customer_email");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("customer_name");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer_phone");

                    b.Property<string>("CustomerTaxID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("customer_tax_id");

                    b.Property<string>("CustomerVatID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("customer_vat_id");

                    b.Property<int>("ValidateVatNumberStatusId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId")
                        .HasName("PK_customer");

                    b.HasIndex("ValidateVatNumberStatusId")
                        .IsUnique();

                    b.ToTable("customer", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.CustomerAddress", b =>
                {
                    b.Property<int>("CustomerAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_address_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerAddressId"));

                    b.Property<string>("AddressCity")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("address_city");

                    b.Property<string>("AddressDistrict")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("address_district");

                    b.Property<string>("AddressName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("address_name");

                    b.Property<string>("AddressName1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("address_name1");

                    b.Property<string>("AddressStreet")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("address_street");

                    b.Property<string>("AddressZip")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("address_zip");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("country_id");

                    b.Property<int>("CustomerAddressTypeId")
                        .HasColumnType("int")
                        .HasColumnName("customer_address_type_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.HasKey("CustomerAddressId")
                        .HasName("PK_customer_address");

                    b.HasIndex("CountryId")
                        .IsUnique()
                        .HasFilter("[country_id] IS NOT NULL");

                    b.HasIndex("CustomerAddressTypeId")
                        .IsUnique();

                    b.HasIndex("CustomerId");

                    b.ToTable("customer_address", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.CustomerAddressType", b =>
                {
                    b.Property<int>("CustomerAddressTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_address_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerAddressTypeId"));

                    b.Property<string>("AddressTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address_type_name");

                    b.Property<bool>("IsInvoicing")
                        .HasColumnType("bit")
                        .HasColumnName("is_invoicing");

                    b.HasKey("CustomerAddressTypeId")
                        .HasName("PK_customer_address_type");

                    b.ToTable("customer_address_type", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.CustomerOrder", b =>
                {
                    b.Property<int>("CustomerOrderId")
                        .HasColumnType("int")
                        .HasColumnName("customer_order_id");

                    b.Property<int>("CustomerAddressDeliveryId")
                        .HasColumnType("int")
                        .HasColumnName("customer_address_delivery_id");

                    b.Property<int>("CustomerAddressInvoicingId")
                        .HasColumnType("int")
                        .HasColumnName("customer_address_invoicing_id");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("OrderCreate")
                        .HasColumnType("datetime2")
                        .HasColumnName("order_create");

                    b.Property<int?>("OrderCreateUser")
                        .HasColumnType("int")
                        .HasColumnName("order_create_user");

                    b.Property<int>("OrderCurrency")
                        .HasColumnType("int")
                        .HasColumnName("order_currency");

                    b.Property<double>("OrderCurrencyRate")
                        .HasColumnType("float")
                        .HasColumnName("order_currency_rate");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("order_date");

                    b.Property<DateTime?>("OrderDateCancel")
                        .HasColumnType("datetime2")
                        .HasColumnName("order_date_cancel");

                    b.Property<DateTime?>("OrderDateDelivery")
                        .HasColumnType("datetime2")
                        .HasColumnName("order_date_delivery");

                    b.Property<DateTime?>("OrderDateExpedition")
                        .HasColumnType("datetime2")
                        .HasColumnName("order_date_expedition");

                    b.Property<DateTime?>("OrderDateReservation")
                        .HasColumnType("datetime2")
                        .HasColumnName("order_date_reservation");

                    b.Property<DateTime?>("OrderDelete")
                        .HasColumnType("datetime2")
                        .HasColumnName("order_delete");

                    b.Property<int?>("OrderDeleteUser")
                        .HasColumnType("int")
                        .HasColumnName("order_delete_user");

                    b.Property<DateTime?>("OrderDeliveryAfter")
                        .HasColumnType("datetime2")
                        .HasColumnName("order_delivery_after");

                    b.Property<DateTime?>("OrderDeliveryBy")
                        .HasColumnType("datetime2")
                        .HasColumnName("order_delivery_by");

                    b.Property<int?>("OrderDeliveryStatus")
                        .HasColumnType("int")
                        .HasColumnName("order_delivery_status");

                    b.Property<int?>("OrderDeliveryType")
                        .HasColumnType("int")
                        .HasColumnName("order_delivery_type");

                    b.Property<DateTime?>("OrderModify")
                        .HasColumnType("datetime2")
                        .HasColumnName("order_modify");

                    b.Property<int?>("OrderModifyUser")
                        .HasColumnType("int")
                        .HasColumnName("order_modify_user");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("order_number");

                    b.Property<DateTime?>("OrderPaymentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("order_payment_date");

                    b.Property<int>("OrderPaymentStatus")
                        .HasColumnType("int")
                        .HasColumnName("order_payment_status");

                    b.Property<int>("OrderPaymentType")
                        .HasColumnType("int")
                        .HasColumnName("order_payment_type");

                    b.Property<int>("OrderSourceWeb")
                        .HasColumnType("int")
                        .HasColumnName("order_source_web");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int")
                        .HasColumnName("order_status");

                    b.Property<double>("OrderTotalAmount")
                        .HasColumnType("float")
                        .HasColumnName("order_total_amount");

                    b.Property<double>("OrderTotalAmountAc")
                        .HasColumnType("float")
                        .HasColumnName("order_total_amount_ac");

                    b.HasKey("CustomerOrderId")
                        .HasName("PK_customer_order");

                    b.HasIndex("CustomerAddressDeliveryId")
                        .IsUnique();

                    b.HasIndex("CustomerAddressInvoicingId")
                        .IsUnique();

                    b.HasIndex("CustomerID")
                        .IsUnique();

                    b.HasIndex("OrderCreateUser")
                        .IsUnique()
                        .HasFilter("[order_create_user] IS NOT NULL");

                    b.HasIndex("OrderCurrency")
                        .IsUnique();

                    b.HasIndex("OrderDeleteUser")
                        .IsUnique()
                        .HasFilter("[order_delete_user] IS NOT NULL");

                    b.HasIndex("OrderModifyUser")
                        .IsUnique()
                        .HasFilter("[order_modify_user] IS NOT NULL");

                    b.HasIndex("OrderSourceWeb")
                        .IsUnique();

                    b.ToTable("customer_order", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.CustomerOrderDeliveryStatus", b =>
                {
                    b.Property<int>("CustomerOrderDeliveryStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_order_delivery_status_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerOrderDeliveryStatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_name");

                    b.HasKey("CustomerOrderDeliveryStatusId")
                        .HasName("PK_customer_order_delivery_status");

                    b.ToTable("customer_order_delivery_status", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.CustomerOrderDeliveryType", b =>
                {
                    b.Property<int>("CustomerOrderDeliveryTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_order_delivery_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerOrderDeliveryTypeId"));

                    b.Property<int?>("CarrierServicesId")
                        .HasColumnType("int")
                        .HasColumnName("carrier_services_id");

                    b.Property<string>("DeliveryTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("delivery_type_name");

                    b.HasKey("CustomerOrderDeliveryTypeId")
                        .HasName("PK_customer_order_delivery_type");

                    b.ToTable("customer_order_delivery_type", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.CustomerOrderItem", b =>
                {
                    b.Property<int>("CustomerOrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_order_item_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerOrderItemId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int")
                        .HasColumnName("currency_id");

                    b.Property<decimal>("CurrencyRatio")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)")
                        .HasColumnName("currency_ratio");

                    b.Property<int>("CustomerOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<decimal>("DiscountAddOn")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("discount_add_on");

                    b.Property<int>("ItemTypeId")
                        .HasColumnType("int")
                        .HasColumnName("item_type_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<int>("OrderByItem")
                        .HasColumnType("int")
                        .HasColumnName("order_by_item");

                    b.Property<DateTime>("OrderItemCreate")
                        .HasColumnType("datetime2")
                        .HasColumnName("order_item_create");

                    b.Property<int>("OrderItemCreateUser")
                        .HasColumnType("int")
                        .HasColumnName("order_item_create_user");

                    b.Property<DateTime>("OrderItemDelete")
                        .HasColumnType("datetime2")
                        .HasColumnName("order_item_delete");

                    b.Property<int>("OrderItemDeleteUser")
                        .HasColumnType("int")
                        .HasColumnName("order_item_delete_user");

                    b.Property<DateTime>("OrderItemUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("order_item_update");

                    b.Property<int>("OrderItemUpdateUser")
                        .HasColumnType("int")
                        .HasColumnName("order_item_update_user");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)")
                        .HasColumnName("quantity");

                    b.Property<decimal>("QuantityDelivery")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)")
                        .HasColumnName("quantity_delivery");

                    b.Property<decimal>("QuantityReserved")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)")
                        .HasColumnName("quantity_reserved");

                    b.Property<int>("RoutingTypeID")
                        .HasColumnType("int")
                        .HasColumnName("routing_type_id");

                    b.Property<decimal>("TotalPriceAc")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_price_ac");

                    b.Property<decimal>("TotalPriceCurrency")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_price_currency");

                    b.Property<decimal>("TotalPriceVatAc")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_price_vat_ac");

                    b.Property<decimal>("TotalPriceVatCurrency")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_price_vat_currency");

                    b.Property<int>("UnitOfMeasure")
                        .HasColumnType("int")
                        .HasColumnName("unit_of_measure");

                    b.Property<int>("UnitOfMeasureBase")
                        .HasColumnType("int")
                        .HasColumnName("unit_of_measure_base");

                    b.Property<decimal>("UnitOfMeasureRatio")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)")
                        .HasColumnName("unit_of_measure_ratio");

                    b.Property<decimal>("UnitPriceAc")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("unit_price_ac");

                    b.Property<decimal>("UnitPriceCurrency")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("unit_price_currency");

                    b.Property<int>("VatId")
                        .HasColumnType("int")
                        .HasColumnName("vat_id");

                    b.Property<decimal>("VatRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("vat_rate");

                    b.Property<int>("WarehouseCardId")
                        .HasColumnType("int")
                        .HasColumnName("warehouse_card_id");

                    b.HasKey("CustomerOrderItemId")
                        .HasName("PK_customer_order_item");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerOrderId");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("OrderItemCreateUser");

                    b.HasIndex("OrderItemDeleteUser");

                    b.HasIndex("OrderItemUpdateUser");

                    b.HasIndex("RoutingTypeID");

                    b.HasIndex("UnitOfMeasure");

                    b.HasIndex("UnitOfMeasureBase");

                    b.HasIndex("VatId");

                    b.HasIndex("WarehouseCardId");

                    b.ToTable("customer_order_item", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.CustomerOrderPaymentStatus", b =>
                {
                    b.Property<int>("CustomerOrderPaymentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_order_payment_status_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerOrderPaymentStatusId"));

                    b.Property<string>("PaymentStatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("payment_status_name");

                    b.HasKey("CustomerOrderPaymentStatusId")
                        .HasName("PK_customer_order_payment_status");

                    b.ToTable("customer_order_payment_status", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.CustomerOrderPaymentType", b =>
                {
                    b.Property<int>("CustomerOrderPaymentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_order_payment_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerOrderPaymentTypeId"));

                    b.Property<string>("PaymentTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("payment_type_name");

                    b.HasKey("CustomerOrderPaymentTypeId")
                        .HasName("PK_customer_order_payment_type");

                    b.ToTable("customer_order_payment_type", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.CustomerOrderStatus", b =>
                {
                    b.Property<int>("CustomerOrderStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_order_status_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerOrderStatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_name");

                    b.HasKey("CustomerOrderStatusId")
                        .HasName("PK_customer_order_status");

                    b.ToTable("customer_order_status", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.CustomerOrderSum", b =>
                {
                    b.Property<int>("CustomerOrderSumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_order_sum_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerOrderSumId"));

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int")
                        .HasColumnName("currency_id");

                    b.Property<int>("CustomerOrderId")
                        .HasColumnType("int")
                        .HasColumnName("customer_order_id");

                    b.Property<double>("VatAmount")
                        .HasColumnType("float")
                        .HasColumnName("vat_amount");

                    b.Property<int>("VatId")
                        .HasColumnType("int")
                        .HasColumnName("vat_id");

                    b.Property<double>("VatPercent")
                        .HasColumnType("float")
                        .HasColumnName("vat_percent");

                    b.Property<double>("WithOutVat")
                        .HasColumnType("float")
                        .HasColumnName("with_out_vat");

                    b.Property<double>("WithVat")
                        .HasColumnType("float")
                        .HasColumnName("with_vat");

                    b.HasKey("CustomerOrderSumId")
                        .HasName("PK_customer_order_sum");

                    b.HasIndex("CurrencyId")
                        .IsUnique();

                    b.HasIndex("CustomerOrderId");

                    b.HasIndex("VatId")
                        .IsUnique();

                    b.ToTable("customer_order_sum", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.Eshop", b =>
                {
                    b.Property<int>("EShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("eshop_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EShopId"));

                    b.Property<string>("EShopName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("eshop_name");

                    b.Property<string>("EshopUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("eshop_url");

                    b.HasKey("EShopId")
                        .HasName("PK_eshop");

                    b.ToTable("eshop", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.ItemType", b =>
                {
                    b.Property<int>("ItemTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("item_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemTypeId"));

                    b.Property<string>("ItemTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("item_type_name");

                    b.HasKey("ItemTypeId")
                        .HasName("PK_item_type");

                    b.ToTable("item_type", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.OrderItemType", b =>
                {
                    b.Property<int>("OrderItemTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_item_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemTypeId"));

                    b.Property<int>("ItemTypeID")
                        .HasColumnType("int")
                        .HasColumnName("item_type_id");

                    b.Property<string>("OrderItemTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("order_item_type_name");

                    b.HasKey("OrderItemTypeId")
                        .HasName("PK_order_item_type");

                    b.HasIndex("ItemTypeID");

                    b.ToTable("order_item_type", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.RoutingType", b =>
                {
                    b.Property<int>("RoutingTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("routing_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoutingTypeId"));

                    b.Property<string>("RoutingTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("routing_type_name");

                    b.HasKey("RoutingTypeId")
                        .HasName("PK_routing_type");

                    b.ToTable("routing_type", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.SystemUser", b =>
                {
                    b.Property<int>("SystemUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("system_user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SystemUserId"));

                    b.Property<int>("UserCreate")
                        .HasColumnType("int")
                        .HasColumnName("user_create");

                    b.Property<DateTime>("UserCreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("user_create_date");

                    b.Property<int?>("UserDelete")
                        .HasColumnType("int")
                        .HasColumnName("user_delete");

                    b.Property<DateTime?>("UserDeleteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("user_delete_date");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_email");

                    b.Property<string>("UserFirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_first_name");

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_last_name");

                    b.Property<int?>("UserModify")
                        .HasColumnType("int")
                        .HasColumnName("user_modify");

                    b.Property<DateTime?>("UserModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("user_modify_date");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_name");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_password");

                    b.Property<int>("UserStatus")
                        .HasColumnType("int")
                        .HasColumnName("user_status");

                    b.HasKey("SystemUserId")
                        .HasName("PK_system_user");

                    b.ToTable("system_user", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.UnitOfMeasure", b =>
                {
                    b.Property<int>("UnitOfMeasureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("unit_of_measure_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitOfMeasureId"));

                    b.Property<string>("UnitOfMeasureCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("unit_of_measure_code");

                    b.Property<string>("UnitOfMeasureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("unit_of_measure_name");

                    b.HasKey("UnitOfMeasureId")
                        .HasName("PK_unit_of_measure");

                    b.ToTable("unit_of_measure", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.ValidateVatNumberStatus", b =>
                {
                    b.Property<int>("ValidateVatNumberStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("validate_vat_number_status_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ValidateVatNumberStatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_name");

                    b.HasKey("ValidateVatNumberStatusId")
                        .HasName("PK_validate_vat_number_status");

                    b.ToTable("validate_vat_number_status", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.Vat", b =>
                {
                    b.Property<int>("VatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vat_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VatId"));

                    b.Property<string>("VatCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("vat_code");

                    b.Property<string>("VatName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vat_name");

                    b.Property<decimal>("VatRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("vat_rate");

                    b.HasKey("VatId")
                        .HasName("PK_vat");

                    b.ToTable("vat", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.WarehouseCard", b =>
                {
                    b.Property<int>("WarehouseCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("warehouse_card_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarehouseCardId"));

                    b.Property<DateTime>("WarehouseCardCreate")
                        .HasColumnType("datetime2")
                        .HasColumnName("warehouse_card_create");

                    b.Property<int>("WarehouseCardCreateUser")
                        .HasColumnType("int")
                        .HasColumnName("warehouse_card_create_user");

                    b.Property<int?>("WarehouseCardCreateUserNavigationSystemUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("WarehouseCardDelete")
                        .HasColumnType("datetime2")
                        .HasColumnName("warehouse_card_delete");

                    b.Property<int>("WarehouseCardDeleteUser")
                        .HasColumnType("int")
                        .HasColumnName("warehouse_card_delete_user");

                    b.Property<int?>("WarehouseCardDeleteUserNavigationSystemUserId")
                        .HasColumnType("int");

                    b.Property<string>("WarehouseCardDescription")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("warehouse_card_description");

                    b.Property<string>("WarehouseCardName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("warehouse_card_name");

                    b.Property<int>("WarehouseCardStatus")
                        .HasColumnType("int")
                        .HasColumnName("warehouse_card_status");

                    b.Property<int>("WarehouseCardType")
                        .HasColumnType("int")
                        .HasColumnName("warehouse_card_type");

                    b.Property<DateTime>("WarehouseCardUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("warehouse_card_update");

                    b.Property<int>("WarehouseCardUpdateUser")
                        .HasColumnType("int")
                        .HasColumnName("warehouse_card_update_user");

                    b.Property<int?>("WarehouseCardUpdateUserNavigationSystemUserId")
                        .HasColumnType("int");

                    b.HasKey("WarehouseCardId")
                        .HasName("PK_warehouse_card");

                    b.HasIndex("WarehouseCardCreateUserNavigationSystemUserId");

                    b.HasIndex("WarehouseCardDeleteUserNavigationSystemUserId");

                    b.HasIndex("WarehouseCardUpdateUserNavigationSystemUserId");

                    b.ToTable("warehouse_card", (string)null);
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.Customer", b =>
                {
                    b.HasOne("FiStar.OMS.Data.Entity.ValidateVatNumberStatus", "ValidateVatNumberStatus")
                        .WithOne()
                        .HasForeignKey("FiStar.OMS.Data.Entity.Customer", "ValidateVatNumberStatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_validate_vat_number_status");

                    b.Navigation("ValidateVatNumberStatus");
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.CustomerAddress", b =>
                {
                    b.HasOne("FiStar.OMS.Data.Entity.Country", "CountryNavigation")
                        .WithOne()
                        .HasForeignKey("FiStar.OMS.Data.Entity.CustomerAddress", "CountryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_customer_address_country");

                    b.HasOne("FiStar.OMS.Data.Entity.CustomerAddressType", "CustomerAddressTypeNavigation")
                        .WithOne()
                        .HasForeignKey("FiStar.OMS.Data.Entity.CustomerAddress", "CustomerAddressTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_address_customer_address_type");

                    b.HasOne("FiStar.OMS.Data.Entity.Customer", "CustomerNavigation")
                        .WithMany("CustomerAddresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_customer_address_customer");

                    b.Navigation("CountryNavigation");

                    b.Navigation("CustomerAddressTypeNavigation");

                    b.Navigation("CustomerNavigation");
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.CustomerOrder", b =>
                {
                    b.HasOne("FiStar.OMS.Data.Entity.CustomerAddress", "CustomerAddressDeliveryNavigation")
                        .WithOne()
                        .HasForeignKey("FiStar.OMS.Data.Entity.CustomerOrder", "CustomerAddressDeliveryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_customer_address_delivery");

                    b.HasOne("FiStar.OMS.Data.Entity.CustomerAddress", "CustomerAddressInvoicingNavigation")
                        .WithOne()
                        .HasForeignKey("FiStar.OMS.Data.Entity.CustomerOrder", "CustomerAddressInvoicingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_customer_address_invoicing");

                    b.HasOne("FiStar.OMS.Data.Entity.Customer", "CustomerNavigation")
                        .WithOne()
                        .HasForeignKey("FiStar.OMS.Data.Entity.CustomerOrder", "CustomerID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_customer");

                    b.HasOne("FiStar.OMS.Data.Entity.CustomerOrderDeliveryStatus", "CustomerOrderDeliveryStatusNavigation")
                        .WithOne()
                        .HasForeignKey("FiStar.OMS.Data.Entity.CustomerOrder", "CustomerOrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_customer_order_delivery_status");

                    b.HasOne("FiStar.OMS.Data.Entity.CustomerOrderDeliveryType", "CustomerOrderDeliveryTypeNavigation")
                        .WithOne()
                        .HasForeignKey("FiStar.OMS.Data.Entity.CustomerOrder", "CustomerOrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_customer_order_delivery_type");

                    b.HasOne("FiStar.OMS.Data.Entity.CustomerOrderPaymentStatus", "CustomerOrderPaymentStatusNavigation")
                        .WithOne()
                        .HasForeignKey("FiStar.OMS.Data.Entity.CustomerOrder", "CustomerOrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_customer_order_payment_status");

                    b.HasOne("FiStar.OMS.Data.Entity.CustomerOrderPaymentType", "CustomerOrderPaymentTypeNavigation")
                        .WithOne()
                        .HasForeignKey("FiStar.OMS.Data.Entity.CustomerOrder", "CustomerOrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_customer_order_payment_type");

                    b.HasOne("FiStar.OMS.Data.Entity.CustomerOrderStatus", "CustomerOrderStatusNavigation")
                        .WithOne()
                        .HasForeignKey("FiStar.OMS.Data.Entity.CustomerOrder", "CustomerOrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_customer_order_status");

                    b.HasOne("FiStar.OMS.Data.Entity.SystemUser", "OrderCreateUserNavigation")
                        .WithOne()
                        .HasForeignKey("FiStar.OMS.Data.Entity.CustomerOrder", "OrderCreateUser")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_customer_order_system_user_create");

                    b.HasOne("FiStar.OMS.Data.Entity.Currency", "CurrencyNavigation")
                        .WithOne()
                        .HasForeignKey("FiStar.OMS.Data.Entity.CustomerOrder", "OrderCurrency")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_currency");

                    b.HasOne("FiStar.OMS.Data.Entity.SystemUser", "OrderDeleteUserNavigation")
                        .WithOne()
                        .HasForeignKey("FiStar.OMS.Data.Entity.CustomerOrder", "OrderDeleteUser")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_customer_order_system_user_delete");

                    b.HasOne("FiStar.OMS.Data.Entity.SystemUser", "OrderModifyUserNavigation")
                        .WithOne()
                        .HasForeignKey("FiStar.OMS.Data.Entity.CustomerOrder", "OrderModifyUser")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_customer_order_system_user_modify");

                    b.HasOne("FiStar.OMS.Data.Entity.Eshop", "EshopNavigation")
                        .WithOne()
                        .HasForeignKey("FiStar.OMS.Data.Entity.CustomerOrder", "OrderSourceWeb")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_eshop");

                    b.Navigation("CurrencyNavigation");

                    b.Navigation("CustomerAddressDeliveryNavigation");

                    b.Navigation("CustomerAddressInvoicingNavigation");

                    b.Navigation("CustomerNavigation");

                    b.Navigation("CustomerOrderDeliveryStatusNavigation");

                    b.Navigation("CustomerOrderDeliveryTypeNavigation");

                    b.Navigation("CustomerOrderPaymentStatusNavigation");

                    b.Navigation("CustomerOrderPaymentTypeNavigation");

                    b.Navigation("CustomerOrderStatusNavigation");

                    b.Navigation("EshopNavigation");

                    b.Navigation("OrderCreateUserNavigation");

                    b.Navigation("OrderDeleteUserNavigation");

                    b.Navigation("OrderModifyUserNavigation");
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.CustomerOrderItem", b =>
                {
                    b.HasOne("FiStar.OMS.Data.Entity.Currency", "CurrencyNavigation")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_item_currency");

                    b.HasOne("FiStar.OMS.Data.Entity.CustomerOrder", "CustomerOrderNavigation")
                        .WithMany("CustomerOrderItems")
                        .HasForeignKey("CustomerOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_item_customer_order");

                    b.HasOne("FiStar.OMS.Data.Entity.OrderItemType", "ItemTypeNavigation")
                        .WithMany()
                        .HasForeignKey("ItemTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_item_order_item_type");

                    b.HasOne("FiStar.OMS.Data.Entity.SystemUser", "OrderItemCreateUserNavigation")
                        .WithMany()
                        .HasForeignKey("OrderItemCreateUser")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_item_order_item_create_user");

                    b.HasOne("FiStar.OMS.Data.Entity.SystemUser", "OrderItemDeleteUserNavigation")
                        .WithMany()
                        .HasForeignKey("OrderItemDeleteUser")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_item_order_item_delete_user");

                    b.HasOne("FiStar.OMS.Data.Entity.SystemUser", "OrderItemUpdateUserNavigation")
                        .WithMany()
                        .HasForeignKey("OrderItemUpdateUser")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_item_order_item_update_user");

                    b.HasOne("FiStar.OMS.Data.Entity.RoutingType", "RoutingTypeNavigation")
                        .WithMany()
                        .HasForeignKey("RoutingTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_item_routing_type");

                    b.HasOne("FiStar.OMS.Data.Entity.UnitOfMeasure", "UnitOfMeasureNavigation")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasure")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_item_unit_of_measure");

                    b.HasOne("FiStar.OMS.Data.Entity.UnitOfMeasure", "UnitOfMeasureBaseNavigation")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasureBase")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_item_unit_of_measure_base");

                    b.HasOne("FiStar.OMS.Data.Entity.Vat", "VatNavigation")
                        .WithMany()
                        .HasForeignKey("VatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_item_vat");

                    b.HasOne("FiStar.OMS.Data.Entity.WarehouseCard", "WarehouseCardNavigation")
                        .WithMany()
                        .HasForeignKey("WarehouseCardId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_item_warehouse_card");

                    b.Navigation("CurrencyNavigation");

                    b.Navigation("CustomerOrderNavigation");

                    b.Navigation("ItemTypeNavigation");

                    b.Navigation("OrderItemCreateUserNavigation");

                    b.Navigation("OrderItemDeleteUserNavigation");

                    b.Navigation("OrderItemUpdateUserNavigation");

                    b.Navigation("RoutingTypeNavigation");

                    b.Navigation("UnitOfMeasureBaseNavigation");

                    b.Navigation("UnitOfMeasureNavigation");

                    b.Navigation("VatNavigation");

                    b.Navigation("WarehouseCardNavigation");
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.CustomerOrderSum", b =>
                {
                    b.HasOne("FiStar.OMS.Data.Entity.Currency", "CurrencyNavigation")
                        .WithOne()
                        .HasForeignKey("FiStar.OMS.Data.Entity.CustomerOrderSum", "CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_sum_currency");

                    b.HasOne("FiStar.OMS.Data.Entity.CustomerOrder", "CustomerOrderNavigation")
                        .WithMany("CustomerOrderSums")
                        .HasForeignKey("CustomerOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_sum_customer_order");

                    b.HasOne("FiStar.OMS.Data.Entity.Vat", "VatNavigation")
                        .WithOne()
                        .HasForeignKey("FiStar.OMS.Data.Entity.CustomerOrderSum", "VatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_customer_order_sum_vat");

                    b.Navigation("CurrencyNavigation");

                    b.Navigation("CustomerOrderNavigation");

                    b.Navigation("VatNavigation");
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.OrderItemType", b =>
                {
                    b.HasOne("FiStar.OMS.Data.Entity.ItemType", "ItemTypeNavigation")
                        .WithMany()
                        .HasForeignKey("ItemTypeID")
                        .IsRequired()
                        .HasConstraintName("FK_order_item_type_item_type");

                    b.Navigation("ItemTypeNavigation");
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.WarehouseCard", b =>
                {
                    b.HasOne("FiStar.OMS.Data.Entity.SystemUser", "WarehouseCardCreateUserNavigation")
                        .WithMany()
                        .HasForeignKey("WarehouseCardCreateUserNavigationSystemUserId");

                    b.HasOne("FiStar.OMS.Data.Entity.SystemUser", "WarehouseCardDeleteUserNavigation")
                        .WithMany()
                        .HasForeignKey("WarehouseCardDeleteUserNavigationSystemUserId");

                    b.HasOne("FiStar.OMS.Data.Entity.SystemUser", "WarehouseCardUpdateUserNavigation")
                        .WithMany()
                        .HasForeignKey("WarehouseCardUpdateUserNavigationSystemUserId");

                    b.Navigation("WarehouseCardCreateUserNavigation");

                    b.Navigation("WarehouseCardDeleteUserNavigation");

                    b.Navigation("WarehouseCardUpdateUserNavigation");
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.Customer", b =>
                {
                    b.Navigation("CustomerAddresses");
                });

            modelBuilder.Entity("FiStar.OMS.Data.Entity.CustomerOrder", b =>
                {
                    b.Navigation("CustomerOrderItems");

                    b.Navigation("CustomerOrderSums");
                });
#pragma warning restore 612, 618
        }
    }
}
